apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-management-app
  namespace: employee-management
  labels:
    app: employee-management
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: employee-management
      component: api
  template:
    metadata:
      labels:
        app: employee-management
        component: api
    spec:
      containers:
      - name: employee-management
        image: employee-management:production
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: LOG_LEVEL
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: DEBUG
        - name: ENABLE_SWAGGER
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: ENABLE_SWAGGER
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: JWT_SECRET
        - name: JWT_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: JWT_EXPIRES_IN
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: JWT_REFRESH_SECRET
        - name: JWT_REFRESH_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: JWT_REFRESH_EXPIRES_IN
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: employee-management-secrets
              key: ENCRYPTION_KEY
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: employee-management-config
              key: RATE_LIMIT_MAX_REQUESTS
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Always